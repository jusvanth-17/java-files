Amoeba Multiplication
The environmental eco-club has discovered a new Amoeba that grows in the order of a Fibonacci series every month. They are exhibiting their amoeba in a national conference. They want to know the size of the amoeba at a particular time instant. If a particular month’s index is given, write a program to displays the amoeba’s size……??? For Example, The size of the amoeba on month 1, 2, 3, 4, 5, 6, ..will be 0, 1, 1, 2, 3, 5, 8 respectively. Input format: The first input containing an integer which denotes the number of the month Output format: Print the amoeba size. Input:7 output:8
Example 1:

Input: 

 
13


Output:

144

import java.util.*;
class Main{
  public static void main(String args[]){
    Scanner m=new Scanner(System.in);
    int n,a=0,b=1,c=a+b;
    n=m.nextInt();
    while(n!=3){
      a=b;
      b=c;
      c=a+b;
      n--;
    }
    System.out.println(c);
  }
} 

Factorial Number
Write a program to determine whether 'n' is a factorial number or not. Factorial of a number is the product of all positive numbers from 1 to 'n'. Input format: The input containing an integer 'n' which denotes the given number. Output format: If the given number is factorial, print "Yes". Otherwise, print "No".
Example 1:

Input: 

 
6


Output:

Yes

 
import java.util.*;
class Main{
  public static void main(String args[]){
    Scanner m=new Scanner(System.in);
    int n,fact=1,x=1;
    n=m.nextInt();
    while(fact<n){
      x+=1;
      fact*=x;
    }
    if(fact==n){
      System.out.println("Yes");
    }else{
      System.out.println("No");
    }
  }
}

Lucas Sequence
a = 0, b=0, c=1 are the 1st three terms. All other terms in the Lucas sequence are generated by the sum of their 3 most recent predecessors. Write a program to generate the first n terms of a Lucas Sequence. Input format: The input containing an integer 'n' which denotes the given number Output format: Print the 'n' terms of the Lucas Sequence, separated by a single space. There are no leading or trailing spaces in the output.
Example 1:

Input: 

 
8


Output:

0 0 1 1 2 4 7 13

 import java.util.*;
class Main{
  public static void main(String args[]){
  Scanner m=new Scanner(System.in);
  int n,a=0,b=0,c=1;
   n=m.nextInt();
  System.out.print(a+" "+b+" "+c+" ");
while(n!=3&&n>1){
  int d=a+b+c;
  System.out.print(d+" ");
    a=b;
  b=c;
  c=d;
  n--;
}
}
}

Collatz Program
The rules for generating Collatz Sequence are: If n is even: n = n / 2 If n is odd: n = 3n + 1 For example, if the starting number is 5 the sequence is: 5 -> 16 -> 8 -> 4 -> 2 -> 1 It has been proved for almost all integers, the repeated application of the above rule will result in a sequence that ends at 1. Input:5 Output:5 16 8 4 2 1 5 Input format: The input containing an integer 'n' which denotes the given number Output format: Print the numbers in the sequence and also print the number of times the rule has to be applied in order to reach 1.
Example 1:

Input: 

 
18


Output:

18
9
28
14
7
22
11
34
17
52
26
13
40
20
10
5
16
8
4
2
1
20

 import java.util.*;
class Main{
  public static void main(String args[]){
    Scanner m=new Scanner(System.in);
    int n,c=0;
    n=m.nextInt();
    System.out.println(n);
    while(n!=1){
      if(n%2==0){
        n=n/2;
      }else{
        n=3*n+1;
      }
      System.out.println(n);
      c++;
    }
    System.out.println(c);
}
}

Trendy Numbers
Write a program to check whether the given number is a trendy number or not. A number is said to be a trendy number if and only if it has 3 digits and the middle digit is divisible by 3. Input format: The input containing an integer 'n' which denotes the given number Output format: If the given number is a trendy number, then print "Trendy Number". Otherwise, print "Not a Trendy Number".
Example 1:

Input: 

 
791


Output:

Trendy Number

import java.util.*;
class Main{
  public static void main(String args[]){
    Scanner m=new Scanner(System.in);
    int x,y,z;
    x=m.nextInt();
    y=x/10;
    z=y%10;
    if(z/3!=0){
      System.out.print("Trendy Number");
    }else{
      System.out.print("Not a Trendy Number");
    }
  }
}

Fibonacci Number
Write a C program to find whether the given number is a Fibonacci number. INPUT & OUTPUT FORMAT: Input consists of 1 integer. If it is a Fibonacci number display “Fibonacci Number” or display “Not Fibonacci Number”. The output consists of 1 integer.

Example 1:

Input: 

 
3


Output:

Fibonacci Number

import java.util.*;
class Main{
  public static void main(String args[]){
    Scanner m=new Scanner(System.in);
    int n,a=0,b=1,c=a+b,cnt=0;
    n=m.nextInt();
    for(int i=1;i<=n;i++){
      a=b;
      b=c;
      c=a+b;
      if(c==n){
        System.out.print("Fibonacci Number");
      cnt=1;
      }
    }
    if(cnt==0){
      System.out.print("Not Fibonacci Number");
    }
  }
}

Dollars
Write a C program to add two dollars and cents. INPUT & OUTPUT FORMAT: Input consists of 4 integers. First two inputs correspond to the value of the first dollar and cent. Next two inputs correspond to the value of the second dollar and cent. Output should print the sum of dollar and cent.

Example 1:

Input: 

 
30
10
140
99


Output:

171
9

import java.util.*;
class Main{
  public static void main(String args[]){
    Scanner m=new Scanner(System.in);
    int d1,c1,d2,c2;
    d1=m.nextInt();
    c1=m.nextInt();
    d2=m.nextInt();
    c2=m.nextInt();

    int d=d1+d2+1;
    int c=c1-1;
    System.out.println(d+"\n"+c);
  }
}

